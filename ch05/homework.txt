一、定义一个函数式接口，实现对任意两个整数进行运算。
比如：加法、减法、除法、乘法...

分别使用传统用法、匿名内部类、Lambda表达式实现

二、分别使用以下方式实现多线程，打印输出10个“好好学习，天天向上”
    1）实现Runnable接口
    2）匿名内部类实现
    3）Lambda表达式实现

三、定义一个整型数组，实现降序排序，打印输出排序的结果
提示：
    Arrays.sort(T[] a)
    Arrays.sort(T[] a, Comparator<? super T> c)

四、定义一个学生类（姓名、年龄），定义一个数组，存储若干学生，
对数组各学生根据年龄降序排序，打印输出排序的结果，输出格式为：姓名-年龄
提示：与上题类似，上题比较的整型数组，该题比较的是学生对象数组


五、JDK函数式接口的使用
1.定义一个学生类（姓名、年龄）,使用Supplier接口，
打印输出年龄最小的学生，格式为：姓名-年龄

2.定义一个方法：实现判断一个分数是否合格，并打印输出结果。

3.定义一个学生类（姓名、年龄）；定义一个数组，存储若干学生；
定义三个Consumer，分别用于打印输出姓李的学生信息、
名字有三个字的学生信息、年龄大于18岁的学生。

4.判断邮箱地址是否合法，帐号必须至少由5个字符组成，而且有且只有一个@字符

5.把字符串"张三,18"转换为学生对象（学生类同上）

6.把字符串"张三,18"转换为学生对象，获取学生对象的年龄，
加1岁后转换为整数。

六、定义一个学生类（姓名、年龄），实例化学生对象，如：
new Student(Zing,18) ;
new Student(null,18) ;

要求：
如果姓名为null，则默认打印输出匿名；
如果姓名为非空，则转化为小写后输出。

分别使用传统的方式和Optional来实现！

七、定义一个学生类（姓名、年龄），定义一个数组，存储若干学生
基于流的操作，实现以下需求
过滤姓李的学生
再过滤年龄大于18岁的学生
再根据年龄大到小排序
把学生对象转换（映射）为姓名字符串，循环遍历输出结果（只需要前面两个）

注意：便于测试，需要多添加几个姓”李“的学生

思考：如果没有 Stream API，使用传统的方式实现如何做呢？


八、定义一个学生类（姓名），同时定义两个List集合，分别用于存储若干姓名。
分别做以下操作：
1：第一个List集合中，筛选姓名有三个字的学生，存储到一个新的集合中
2：第一个List集合筛选后只取前3人，存储到新的集合中
3：第二个List集合中只要姓张的学生，存储到新的集合中
4：第二个List集合筛选后，跳过前2人，存储到新的集合中
5：合并两个List集合，存储到新的集合中
6：在合并的List集合中，根据姓名实例化学生类对象，存储到新的集合中
7：打印输出学生对象集合的信息
要求：分别使用传统方式和流方式实现



